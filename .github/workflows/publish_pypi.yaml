# Publish the package on PyPI or TestPyPI.
# This reusable workflow uses the [pypi-publish](https://github.com/pypa/gh-action-pypi-publish) GitHub Action
# to publish the distribution package on either PyPI or TestPyPI, depending on the input.


name: 'Package - Publish PyPI'
run-name: >-
  'Package: Publish on ${{ fromJSON('{"pypi":"PyPI","testpypi":"TestPyPI"}')[inputs.platform] }}'
  'from ${{github.ref}}'

on:
  workflow_call:
    inputs:

      artifact-name:
        description: |
          Name of the artifact containing the distribution package.
          The artifact must be uploaded in the caller workflow, prior to calling this workflow.
          It should contain a source distribution, and as many binary distributions as required.
        required: true
        type: string

      package-name:
        description: |
          Name of the package on (Test)PyPI.
          This is used to link the deployment to the package's page on (Test)PyPI.
        required: true
        type: string

      package-version:
        description: |
          Version of the package being deployed.
          This is used to link the deployment to the package's page on (Test)PyPI.
        required: true
        type: string

      platform-name:
        description: Platform to publish to; either 'testpypi' (default) or 'pypi'.
        required: false
        default: 'testpypi'
        type: string


jobs:

  process-inputs:
    name: 'Process inputs'
    runs-on: ubuntu-latest
    outputs:
      environment-name: ${{ steps.environment.outputs.name }}
      environment-url: ${{ steps.environment.outputs.url }}
      repository-url: ${{ steps.environment.outputs.repo-url }}
    steps:

      - name: 'Display inputs'
        run: |
          echo "::group::artifact-name"
          echo ${{inputs.artifact-name}}
          echo "::endgroup::"
          echo "::group::package-name"
          echo ${{inputs.package-name}}
          echo "::endgroup::"
          echo "::group::package-version"
          echo ${{inputs.package-version}}
          echo "::endgroup::"
          echo "::group::platform-name"
          echo ${{inputs.platform-name}}
          echo "::endgroup::"

      - name: 'Calculate deployment environment data'
        id: environment
        run: |
          echo "name=${{ fromJSON('{"pypi":"PyPI","testpypi":"TestPyPI"}')[inputs.platform-name] }}" >> $GITHUB_OUTPUT
          echo "url=${{ fromJSON(format('{{"pypi":"https://pypi.org/project/{0}/{1}","testpypi":"https://test.pypi.org/project/{0}/{1}"}}', inputs.package-name, inputs.package-version ))[inputs.platform-name] }}" >> $GITHUB_OUTPUT
          echo "repo-url=${{ fromJSON('{"pypi":"https://upload.pypi.org/legacy/","testpypi":"https://test.pypi.org/legacy/"}')[inputs.platform-name] }}" >> $GITHUB_OUTPUT

      - name: 'Display deployment environment data'
        run: |
          echo "::group::environment-name"
          echo ${{ steps.environment.outputs.name }}
          echo "::endgroup::"
          echo "::group::environment-url"
          echo ${{ steps.environment.outputs.url }}
          echo "::endgroup::"
          echo "::group::repository-url"
          echo ${{ steps.environment.outputs.repo-url }}
          echo "::endgroup::"

  publish:
    name: 'Publish on ${{needs.process-inputs.outputs.environment-name}}'
    needs: process-inputs
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.process-inputs.outputs.environment-name }}
      url: ${{ needs.process-inputs.outputs.environment-url }}
    permissions:
      id-token: write
    steps:
      - name: 'Download sdist and wheels artifacts'
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: dist

      - name: 'Display file tree'
        run: find .

      - name: 'Upload package to ${{needs.process-inputs.outputs.environment-name}}'
        uses: pypa/gh-action-pypi-publish@release/v1
        # https://github.com/marketplace/actions/pypi-publish
        with:
          repository-url: ${{ needs.process-inputs.outputs.repository-url }}
          verbose: true
          print-hash: true
          skip-existing: false
