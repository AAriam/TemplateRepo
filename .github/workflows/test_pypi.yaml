# Build and publish the package on TestPyPI

name: Test Publish
run-name: Test Publish on TestPyPI

on:
  push:
  pull_request:
  release:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

defaults:
  run:
    shell: bash -l {0}


jobs:

  get_package_metadata:
    name: Get Package Metadata
    outputs:
      package_name: ${{ fromJson(steps.get_metadata.outputs.json).package.name }}
      python_versions: ${{ toJson(fromJson(steps.get_metadata.outputs.json).package.python_publish_versions) }}
      operating_systems: ${{ toJson(fromJson(steps.get_metadata.outputs.json).package.operating_systems) }}
      is_pure_python: ${{ toJson(fromJson(steps.get_metadata.outputs.json).package.is_pure_python) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Metadata
        id: get_metadata
        uses: ./.github/actions/get-metadata
        with:
          json_filepath: ./metadata/main.json

      - name: Print Extracted Data
        run: |
          echo "Package Name: ${{ fromJson(steps.get_metadata.outputs.json).package.name }}" 
          echo "Python Versions: '${{ toJson(fromJson(steps.get_metadata.outputs.json).package.python_versions) }}'" 
          echo "OS: '${{ toJson(fromJson(steps.get_metadata.outputs.json).package.operating_systems) }}'"
          echo "Is Pure Python: '${{ fromJson(steps.get_metadata.outputs.json).package.is_pure_python }}'"

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz


  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    if: needs.get_package_metadata.outputs.is_pure_python == 'false'
    needs: get_package_metadata
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(needs.get_package_metadata.outputs.operating_systems) }}
        python-version: ${{ fromJson(needs.get_package_metadata.outputs.python_versions) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Print System Info
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Build wheels
        env:
          CIBW_BUILD_VERBOSITY: 2
          CIBW_BUILD: ${{ matrix.python-version }}-*
        uses: pypa/cibuildwheel@v2.13.1

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl


  upload_testpypi:
    name: Publish distribution to TestPyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
    permissions:
      id-token: write
    steps:
      - name: Download sdist and wheels artifacts
        uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - name: Upload to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          print-hash: true