# Continuous Integration pipeline


name: "[On Push]: CI"
run-name: 'CI: ${{github.ref}}'


on:
  push:
    branches-ignore:
      - 'main'
      - 'release/v[0-9]+'


jobs:

  init:
    name: 'RepoDynamics'
    runs-on: ubuntu-latest
    outputs:
      metadata: ${{ steps.meta.outputs.metadata }}
    steps:
      - name: 'Meta'
        id: meta
        uses: repodynamics/meta@main
        with:
          mode: sync
      - name: 'Workflow Run Context'
        uses: repodynamics/workflow-context@main

  changes:
    # Get all changed files/categories in the repository due to the push event.
    #
    # Returns
    # -------
    # json : str
    #     String representation of a JSON object containing info about all changes.
    name: 'Repo Files'
    uses: ./.github/workflows/repo_changes.yaml


  sync:
    name: 'Repo Files'
    needs: changes
    if: fromJSON(needs.changes.outputs.json).meta.any_modified == 'true'
    uses: ./.github/workflows/repo_sync.yaml
    permissions:
      contents: write


  package:
    name: 'Package'
    needs: [metadata, changes, sync]
    if: ${{ !failure() && fromJSON(needs.changes.outputs.json).package.any_modified == 'true' }}
    uses: ./.github/workflows/package_ci.yaml
    permissions:
      pull-requests: write
      security-events: write
      actions: read
      contents: read
    with:
      metadata: ${{needs.metadata.outputs.json}}
      checkout-ref: ${{ github.ref_name }}
      base-ref: ${{ github.event.before }}
      head-ref: ${{ needs.sync.outputs.commit-hash || github.event.after }}


  docs:
    name: 'Docs'
    needs: [changes, sync]
    if: ${{ !failure() && fromJSON(needs.changes.outputs.json).docs.any_modified == 'true' }}
    uses: ./.github/workflows/docs_build.yaml
    with:
      checkout-ref: ${{ github.ref_name }}
