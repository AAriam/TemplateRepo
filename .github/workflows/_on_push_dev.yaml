# Continuous Integration pipeline

name: "[On Push Development Branch]: CI"
run-name: 'CI: ${{github.ref_name}}'

on:
  push:
    branches-ignore:
      - main
      - release/v[0-9]+
      - announcement

jobs:

  init:
    name: 'Initialization'
    runs-on: ubuntu-latest
    outputs:
      run-package-ci: ${{ steps.init.outputs.run_package_ci }}
      run-docs-ci: ${{ steps.init.outputs.run_docs_ci }}
      latest-hash: ${{ steps.init.outputs.commit-hash }}
    permissions:
      contents: write
    steps:
      - uses: repodynamics/init@main
        id: init

  package-test:
    name: 'Test Package'
    needs: init
    if: needs.init.outputs.run-package-ci == 'true'
    uses: ./.github/workflows/package_test.yaml
    with:
      checkout-ref: ${{ needs.init.outputs.latest-hash }}
      package-source: GitHub

  package-lint:
    name: 'Lint Package'
    needs: init
    if: needs.init.outputs.run-package-ci == 'true'
    permissions:
      pull-requests: write
      security-events: write
      actions: read
      contents: read
    uses: ./.github/workflows/package_lint.yaml
    with:
      checkout-ref: ${{ needs.init.outputs.latest-hash }}
      base-ref: ${{ github.event.before }}
      head-ref: ${{ needs.init.outputs.latest-hash }}

  docs:
    name: 'Docs'
    needs: init
    if: needs.init.outputs.run-docs-ci == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: RepoDynamics/SphinxDocs@main
        with:
          checkout-ref: ${{ needs.init.outputs.latest-hash }}
          deploy: false
