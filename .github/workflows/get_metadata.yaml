name: Get Metadata
run-name: Get Metadata
on: 
  workflow_call:
    inputs:
      json_filepath:
        description: "Path to the JSON file to read."
        default: "metadata.json"
        required: false
        type: string
    outputs:
      json_file:
        description: "Name of the package"
        value: ${{jobs.get_json.outputs.json_file}}
      package_name:
        description: "Name of the package"
        value: ${{fromJson(jobs.get_json.outputs.json_file).package.name}}
      python_versions:
        description: "Array of supported Python versions."
        value: ${{ toJson(fromJson(jobs.get_json.outputs.json_file).package.python_versions) }}
      operating_systems:
        description: "Array of supported operating systems."
        value: ${{ toJson(fromJson(jobs.get_json.outputs.json_file).package.operating_systems) }}

jobs:
  get_json:
    name: Load JSON File
    runs-on: ubuntu-latest
    outputs:
      json_file: ${{ steps.get_json_file.outputs.parsed_json_file }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Print JSON File (for debugging)
        run: cat ./metadata.json
      - name: Parse JSON File
        id: get_json_file
        run: |
          echo "parsed_json_file=$(python ${{inputs.json_filepath}})" >> $GITHUB_OUTPUT
        # cat_results=$(python3 -c 'import json; f = open({{inputs.json_filepath}}); print(json.dumps(json.load(f))); f.close()')
        # echo "parsed_json_file=${cat_results}" >> $GITHUB_OUTPUT
          
  print_extracted:
      name: Print Parsed Values
      needs: get_json
      runs-on: ubuntu-latest
      steps:
        - name: JSON File
          run: echo ${{needs.get_json.outputs.json_file}}
        - name: Package Name
          run: echo ${{fromJson(needs.get_json.outputs.json_file).package.name}}
        - name: Python Versions
          run: echo "${{ toJson(fromJson(needs.get_json.outputs.json_file).package.python_versions) }}"
        - name: Operating Systems
          run: echo "${{ toJson(fromJson(needs.get_json.outputs.json_file).package.operating_systems) }}"
