# Run static code analysis

name: Lint Test
run-name: Lint Test

on:
  push:
  pull_request:
  workflow_dispatch:


jobs:

  get_package_metadata:
    name: Get Package Metadata
    outputs:
      package_name: ${{ fromJson(steps.get_metadata.outputs.json).package.name }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Metadata
        id: get_metadata
        uses: ./.github/actions/get-metadata

      - name: Print Extracted Data
        id: extract
        run: |
          echo "Package Name: ${{ fromJson(steps.get_metadata.outputs.json).package.name }}" 


  pylint:
    name: Static code analysis with Pylint
    needs: get_package_metadata
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install Pylint
        run: |
          python -m pip install --upgrade pylint
          pip list

      - name: Lint
        run: pylint ${{ needs.get_package_metadata.outputs.package_name }}



  lint:

    name: Static Code Analysis
    needs: get_package_metadata
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Print System Info
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Install Linters
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: requirements/dev/lint.yaml
          cache-environment: true

      - name: Print Environment
        shell: bash -el {0}
        run: micromamba list

      - name: PyLint
        if: always()
        shell: micromamba-shell {0}
        run: pylint ${{ needs.get_package_metadata.outputs.package_name }}

      - name: Black
        if: always()
        shell: micromamba-shell {0}
        run: black --check -l 99 ${{ needs.get_package_metadata.outputs.package_name }}

