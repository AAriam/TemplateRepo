name: "Callable: Get Changed Files"
run-name: "Repo: Get changed files in ${{github.event_name}} event"

on:
  workflow_call:
    outputs:
      package:
        value: ${{ jobs.changes.outputs.package }}
      docs:
        value: ${{ jobs.changes.outputs.docs }}
      workflows:
        value: ${{ jobs.changes.outputs.workflows }}
      repodynamics:
        value: ${{ jobs.changes.outputs.repodynamics }}
      meta:
        value: ${{ jobs.changes.outputs.meta }}

jobs:

  changes:
    name: 'changes'
    outputs:
      package: ${{ steps.groups.outputs.package_any_modified }}
      docs: ${{ steps.groups.outputs.docs_any_modified }}
      workflows: ${{ steps.groups.outputs.workflows_any_modified }}
      repodynamics: ${{ steps.groups.outputs.repodynamics_any_modified }}
      meta: ${{ steps.groups.outputs.meta_any_modified }}
    runs-on: ubuntu-latest
    steps:

      - name: 'Checkout repository'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Get all changed files'
        # https://github.com/marketplace/actions/changed-files
        uses: tj-actions/changed-files@v37
        id: all

      - name: 'Get changed groups'
        uses: tj-actions/changed-files@v37
        id: groups
        with:
          files_yaml: |
            package:
              - 'src/**'
              - 'tests/**/*.py'
              - 'pyproject.toml'
              - 'setup.py'
            docs:
              - 'docs/website/source/**'
              - 'src/**/*.py'
              - 'meta/metadata/*.yaml'
            workflows:
            - '.github/workflows/*.yaml'
            repodynamics:
              - 'dev/repodynamics/**'
            meta:
              - 'meta/**'

      - name: 'Create summary'
        env:
          GROUPS: ${{ toJson(steps.groups.outputs) }}
          ALL: ${{ toJson(steps.all.outputs) }}
        shell: python
        run: |
          import os
          import json
          
          groups = json.loads("""${{ env.GROUPS }}""", strict=False)
          all_files = json.loads("""${{ env.ALL }}""", strict=False)
          with open(os.environ["GITHUB_STEP_SUMMARY"], "a") as fh:
            print(
              f"""
          <details><summary>🖥 All files</summary>
          
          ```json
          {json.dumps(all_files, indent=4)}
          ```
          
          </details><details><summary>🖥 File Categories</summary>
          
          ```json
          {json.dumps(groups, indent=4)}
          ```
          
          </details>
          """, 
              file=fh
            )

#        run: |
#          echo "### Changed Groups" >> $GITHUB_STEP_SUMMARY
#
#          echo "- ${{ (steps.groups.outputs.package_any_modified == 'true' && '✅') || '❌' }}  **Package**" >> $GITHUB_STEP_SUMMARY
#          echo "- ${{ (steps.groups.outputs.docs_any_modified == 'true' && '✅') || '❌' }}  **Docs**" >> $GITHUB_STEP_SUMMARY
#          echo "- ${{ (steps.groups.outputs.workflows_any_modified == 'true' && '✅') || '❌' }}  **Workflows**" >> $GITHUB_STEP_SUMMARY
#          echo "- ${{ (steps.groups.outputs.repodynamics_any_modified == 'true' && '✅') || '❌' }}  **RepoDynamics**" >> $GITHUB_STEP_SUMMARY
#          echo "- ${{ (steps.groups.outputs.meta_any_modified == 'true' && '✅') || '❌' }}  **Meta**" >> $GITHUB_STEP_SUMMARY
#
#          echo "### Changed Files" >> $GITHUB_STEP_SUMMARY
#
#          for file in ${{ steps.all.outputs.all_changed_and_modified_files }}; do
#            echo "- \`$file\`" >> $GITHUB_STEP_SUMMARY
#          done
