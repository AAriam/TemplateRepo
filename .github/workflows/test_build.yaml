# Test the build of the Python package

name: Build Test
run-name: Build Test

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:

  get_package_metadata:
    name: Get Package Metadata
    uses: ./.github/actions/get_metadata.yaml

  echo_metadata:
    name: Print Metadata Values
    needs: get_package_metadata
    runs-on: ubuntu-latest
    steps:
      - name: Complete JSON File
        run: echo ${{ needs.get_package_metadata.outputs.json_file }}
      - name: Package Name
        run: echo ${{ needs.get_package_metadata.outputs.package_name }}
      - name: Python Versions
        run: echo "${{ needs.get_package_metadata.outputs.python_versions }}"
      - name: Operating Systems
        run: echo "${{ needs.get_package_metadata.outputs.operating_systems }}"

  build:
    name: Build (Python ${{ matrix.python-version }}, ${{ matrix.os }})
    needs: get_package_metadata
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(needs.get_package_metadata.outputs.operating_systems) }}
        python-version: ${{ fromJson(needs.get_package_metadata.outputs.python_versions) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Print System Info
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python Version
        run: python -c "import sys; print(sys.version)"
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install Package
        run: python -m pip install .
      - name: Print Installed Packages
        run: python -m pip list