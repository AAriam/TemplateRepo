name: "[A]: Expire Announcement"

on:

  workflow_dispatch:

jobs:

  load-metadata:
    name: 'Load repository metadata'
    uses: ./.github/workflows/repo_get-metadata.yaml

  check-expiration:
    name: 'Check expiration date'
    needs: load-metadata
    outputs:
      expired: ${{ steps.expiration-check.outputs.expired }}
    runs-on: ubuntu-latest
    steps:

      - name: 'Verify branch'
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "This workflow can only be triggered from the main branch."
            exit 1
          fi

      - name: 'Checkout repository from ${{ github.ref }}'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Calculate expiration date'
        id: expiration-check
        run: |
          last_commit_date=$(git log -1 --format=%cd --date=unix ${{ fromJSON(needs.load-metadata.outputs.json).paths.website_sphinx_announcement }})
          echo "Last commit timestamp:  $last_commit_date"
          
          current_date=$(date -u +%s)
          echo "Current timestamp: $current_date"
          
          elapsed_seconds=$(($current_date - $last_commit_date))
          echo "Elapsed seconds: $elapsed_seconds"
          
          retention_seconds=$((${{ fromJSON(needs.load-metadata.outputs.json).website.announcement_retention_days }} * 24 * 60 * 60))
          echo "Retention seconds: $retention_seconds"
          
          if (($elapsed_seconds > $retention_seconds)); then
              echo "Announcement is expired."
              echo "expired=true" >> $GITHUB_OUTPUT
          else
              echo "Announcement is not yet expired."
              echo "expired=false" >> $GITHUB_OUTPUT
          fi

      - name: 'Create job summary'
        if: always()
        run: |
          echo "Last announcement commit:" >> $GITHUB_STEP_SUMMARY
          echo "$(git log -1 ${{ fromJSON(needs.load-metadata.outputs.json).paths.website_sphinx_announcement }})" >> $GITHUB_STEP_SUMMARY
          echo "Current time and date:" >> $GITHUB_STEP_SUMMARY

#          echo "Following announcement was published ${{ (github.event_name == 'workflow_dispatch' && format('{0} {1}', 'manually by', github.actor)) || format('{0} {1}', 'automatically for', inputs.trigger) }}:" >> $GITHUB_STEP_SUMMARY
#          echo "\`\`\`html" >> $GITHUB_STEP_SUMMARY
#          echo "${{ inputs.announcement }}" >> "$GITHUB_STEP_SUMMARY"
#          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  remove:
    name: 'Remove announcement'
    needs: check-expiration
    if: needs.check-expiration.outputs.expired == 'true'
    uses: ./.github/workflows/announcement.yaml
    permissions:
      contents: write
    with:
      announcement: ""
      trigger: "expiration"

