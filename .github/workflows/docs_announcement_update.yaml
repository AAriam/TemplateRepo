name: "1. Docs: Update Announcement"
run-name: "Docs: update announcement (tigger: ${{ github.event.inputs.trigger }})"


on:

  workflow_dispatch:
    inputs:
      announcement:
        description: |
          Announcement message; supports HTML syntax (don't forget to escape with \).
          To remove announcement, leave this field empty.
        type: string
        default: ""
      trigger:
        description: "Reason for announcement, e.g. 'expiration' or 'new release'."
        required: true
        type: string

  workflow_call:
    inputs:
      announcement:
        description: "Announcement message"
        required: true
        type: string
      trigger:
        description: "Reason for announcement, e.g. 'expiration' or 'new release'."
        required: true
        type: string


jobs:

  metadata:
    name: 'Load repository metadata'
    uses: ./.github/workflows/repo_meta_get.yaml

  publish:
    name: 'Update announcement'
    needs: metadata
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:

      - name: 'Verify branch'
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "This workflow can only be triggered from the main branch."
            exit 1
          fi

      - name: 'Checkout repository from ${{ github.ref }}'
        uses: actions/checkout@v3

      - name: 'Display announcement'
        run: echo "${{ inputs.announcement }}"

      - name: 'Update announcement file'
        run: echo "${{ inputs.announcement }}" > ${{ fromJSON(needs.metadata.outputs.json).path.docs.website.announcement }}

      - name: 'Commit changes and push'
        # https://github.com/marketplace/actions/git-auto-commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: ${{ fromJSON(needs.metadata.outputs.json).path.docs.website.announcement }}
          commit_message: >-
            docs(announcement): update announcement for ${{ inputs.trigger }}
          commit_user_name: RepoDynamics[bot]

      - name: 'Create job summary'
        if: always()
        run: |
          echo "#### 🏁 Result" >> $GITHUB_STEP_SUMMARY
          cause='${{ (github.event_name == 'workflow_dispatch' && format('{0}{1}', 'manually by @', github.actor)) || 'automatically' }}'
          if [ "{{ inputs.announcement }}" = "" ]; then
              echo "The announcement was removed $cause due to following trigger:" >> $GITHUB_STEP_SUMMARY
              echo "> ${{ inputs.trigger }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "Following announcement was published $cause (trigger: ${{ inputs.trigger }}):" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`html" >> $GITHUB_STEP_SUMMARY
            echo "${{ inputs.announcement }}" >> "$GITHUB_STEP_SUMMARY"
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi
