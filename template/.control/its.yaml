changelog:
  pkg_api:
    name: Public API
    path: CHANGELOG.md
    title: ${{name}} Changelog - Public API
    intro: |
      This document records all changes to the public API of ${{ name }} in each new final release.
      The changes documented here are only those that affect the end-users of the software,
      such as added, changed, or removed features, bug fixes, and performance improvements.

      The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
      and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
    entry:
      title: "[{ver_dist}] – {date}"
      intro: |
        - Commit Type: {commit_type}
        - Commit Title: {commit_title}
        - Parent Commit: [{parent_commit_hash}]({parent_commit_url})
    sections: &changelog_pkg_api_sections
      - id: removed
        title: ⛔ Removed Features
        description: |
          Features that have been removed from the public API.
      - id: changed
        title: 🚫 Changed Features
        description: |
          Features that have been changed in the public API.
      - id: deprecated
        title: ⚠️ Deprecated Features
        description: |
          Features that have been deprecated in the public API.
      - id: added
        title: 🌱 New Features
        description: |
          Features that have been added to the public API.
      - id: enhanced
        title: ✨ Enhanced Features
        description: |
          Features that have been enhanced in the public API.
      - id: security
        title: 🛡️ Security Fixes
        description: |
          Security fixes that have been applied to the public API.
      - id: fixed
        title: 🐞 Bug Fixes
        description: |
          Bug fixes that have been applied to the public API.
      - id: improved
        title: 🚀 Performance Improvements
        description: |
          Performance improvements that have been applied to the public API.
      - id: docs
        title: 📝 Docstring Fixes
        description: |
          Docstring fixes that have been applied to the public API.
      - id: notes
        title: 📔️ Release-Notes Fixes
        description: |
          Release-Notes fixes that have been applied to the public API.
  pkg_api_pre:
    name: Pre-release Public API
    path: CHANGELOG_PRERELEASE.md
    title: ${{name}} Changelog - Pre-release Public API
    intro: |
      This document records all changes to the public API of ${{ name }} during a pre-release period.
      The changes documented here are only those that affect the end-users of the software,
      such as added, changed, or removed features, bug fixes, and performance improvements.

      The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
      and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
    entry:
      title: "[{ver_dist}] – {date}"
      intro: |
        - Commit Type: {commit_type}
        - Commit Title: {commit_title}
        - Parent Commit: [{parent_commit_hash}]({parent_commit_url})
    sections: *changelog_pkg_api_sections
  website:
    name: Website
    path: docs/website/CHANGELOG.md
    title: "${{name}} Changelog (Website)"
    intro: |
      This changelog documents the changes to the website.
    entry:
      title: "[{ver_dist}] – {date}"
      intro: |
        - Commit Type: {commit_type}
        - Commit Title: {commit_title}
        - Parent Commit: [{parent_commit_hash}]({parent_commit_url})
    sections:
      - id: content
        title: Content
        description: Changes to website content.
      - id: design
        title: Design
        description: Changes to website design.
      - id: backend
        title: Backend
        description: Changes to website backend.
  package_private:
    name: Private API
    path: ".dev/CHANGELOG.md"
    title: "${{name}} Changelog (Private API)"
    intro: |
      This file contains changes to the private API, as well as changes that
      do not induce a version bump.
    sections:
      - id: removed
        title: ⛔ Removed Features
        description: Features that have been removed from the private API.
      - id: changed
        title: 🚫 Changed Features
        description: Features that have been changed in the private API.
      - id: added
        title: 🌱 New Features
        description: Features that have been added to the private API.
      - id: enhanced
        title: ✨ Enhanced Features
        description: Features that have been enhanced in the private API.
      - id: fixed
        title: 🐞 Bug Fixes
        description: Bug fixes that have been applied to the private API.
      - id: improved
        title: 🚀 Performance Improvements
        description: Performance improvements that have been applied to the private API.
      - id: docs
        title: 📝 Docstring Fixes
        description: Docstring fixes that have been applied to the private API.
      - id: build
        title: 🛠️ Build System Changes
        description: Changes to the package build system.
      - id: refactor
        title: 🧹 Refactorings
        description: Code refactorings.
      - id: style
        title: 🎨 Style Changes
        description: Code style changes.
  tests:
    name: Test Suite
    path: "tests/CHANGELOG.md"
    title: "${{name}} Changelog (Test Suite)"
    intro: |
      This changelog documents the changes to the test suite.
    sections:
      - id: removed
        title: ⛔ Removed Features
        description: Features that have been removed from the test suite.
      - id: changed
        title: 🚫 Changed Features
        description: Features that have been changed in the test suite.
      - id: added
        title: 🌱 New Features
        description: Features that have been added to the test suite.
      - id: enhanced
        title: ✨ Enhanced Features
        description: Features that have been enhanced in the test suite.
      - id: fixed
        title: 🐞 Bug Fixes
        description: Bug fixes that have been applied to the test suite.
      - id: improved
        title: 🚀 Performance Improvements
        description: Performance improvements that have been applied to the test suite.
      - id: docs
        title: 📝 Docstring Fixes
        description: Docstring fixes that have been applied to the test suite.
      - id: build
        title: 🛠️ Build System Changes
        description: Changes to the test-suite build system.
      - id: refactor
        title: 🧹 Refactorings
        description: Code refactorings in the test-suite.
      - id: style
        title: 🎨 Style Changes
        description: Code style changes in the test-suite.
  meta:
    name: Meta Content
    path: .meta/CHANGELOG.md
    title: ${{name}} Changelog (Meta)
    intro: This changelog documents the changes to the meta content.
    sections:
      - id: credits
        title: Credits
        description: Changes to core/credits.yaml file.
      - id: extensions
        title: Extensions
        description: Changes to core/extensions.yaml file.
      - id: intro
        title: Intro
        description: Changes to core/intro.yaml file.
      - id: license
        title: License
        description: Changes to core/license.yaml file.
      - id: changelog
        title: Changelogs
        description: Changes to dev/changelogs.yaml file.
      - id: commits
        title: Commits
        description: Changes to dev/commits.yaml file.
      - id: issues
        title: Issues
        description: Changes to dev/issues.yaml file.
      - id: labels
        title: Labels
        description: Changes to dev/labels.yaml file.
      - id: maintainers
        title: Maintainers
        description: Changes to dev/maintainers.yaml file.
      - id: repo
        title: Repo
        description: Changes to dev/repo.yaml file.
      - id: workflows
        title: Workflows
        description: Changes to dev/workflows.yaml file.
      - id: package_metadata
        title: Package Metadata
        description: Changes to package/metadata.yaml file.
      - id: package_build
        title: Package Build System.
        description: Changes to package/config_build files.
      - id: package_tools
        title: Package Configurations.
        description: Changes to package/config_tools files.
  workflows:
    name: Workflows
    path: .github/CHANGELOG.md
    title: ${{name}} Changelog (Workflows)
    intro: This changelog documents the changes to the workflows.
    sections:
      - id: workflows
        title: Workflows
        description: Changes to workflows.
commit:
  auto:
    sync:
      type: auto-sync
    maintain:
      type: auto-maintain
  primary:
    major:
      type: major
      subtypes:
        any: [ remove, change ]
        exclude: [ ci, meta-extensions, meta-changelog, meta-commits, meta-issues, meta-labels ]
      description: |
        Remove features/components from - or introduce breaking changes to - the public API,
        and publish a new major release of the package.
    minor:
      type: minor
      subtypes:
        any: [ deprecate, feat, enhance ]
      description: |
        Add features/components to, or enhance/deprecate existing features in, the public API,
        and publish a new minor release of the package.
    patch:
      type: patch
      subtypes:
        any: [ secure, fix, perf ]
      description: |
        Fix bugs or security issues in the public API,
        or improve the performance of existing functionalities,
        and publish a new patch release of the package.
    post:
      type: post
      subtypes:
        any: [ docs, notes ]
      description: |
        Fix documentation or release notes in a previous package release,
        and publish a new post release.
    web:
      type: web
      subtypes:
        any: [ web-content, web-design, web-backend ]
      description: |
        Change the website content, design or backend.
    config:
      type: config
      subtypes:
        any:
          - meta-credits
          - meta-extensions
          - meta-intro
          - meta-license
          - meta-changelog
          - meta-commits
          - meta-issues
          - meta-labels
          - meta-maintainers
          - meta-repo
          - meta-workflows
      description: Change project configuration files in control center.
    package_private:
      type: pkg
      subtypes:
        any:
          - priv-remove
          - priv-change
          - priv-feat
          - priv-enhance
          - priv-fix
          - priv-perf
          - priv-docs
          - build
          - refactor
          - style
      description: |
        Change the private API, the build system, or refactor code,
        without affecting the public API,
        and without publishing a new package release.
    tests:
      type: test
      subtypes:
        any:
          - test-remove
          - test-change
          - test-feat
          - test-enhance
          - test-fix
          - test-perf
          - test-docs
          - test-build
          - test-refactor
          - test-style
      description: |
        Change the test-suite, without affecting the public API,
        and without publishing a new package release.
    workflows:
      type: ci
      subtypes:
        any: [ ci ]
      description: |
        Change the GitHub workflows of the repository.
  secondary:
    remove:
      description: 'Remove a feature/component from the public API.'
      changelog_id: pkg_api
      changelog_section_id: 'removed'
    change:
      description: 'Change a feature/component in the public API.'
      changelog_id: pkg_api
      changelog_section_id: 'changed'
    deprecate:
      description: 'Deprecate a feature/component from the public API.'
      changelog_id: pkg_api
      changelog_section_id: 'deprecated'
    feat:
      description: 'Add a feature/component to the public API.'
      changelog_id: pkg_api
      changelog_section_id: 'added'
    enhance:
      description: 'Enhance a feature/component in the public API.'
      changelog_id: pkg_api
      changelog_section_id: 'enhanced'
    secure:
      description: 'Fix a security issue in the public API.'
      changelog_id: pkg_api
      changelog_section_id: 'security'
    fix:
      description: 'Fix a bug in the public API.'
      changelog_id: pkg_api
      changelog_section_id: 'fixed'
    perf:
      description: 'Improve performance in the public API.'
      changelog_id: pkg_api
      changelog_section_id: 'improved'
    docs:
      description: 'Fix documentation.'
      changelog_id: pkg_api
      changelog_section_id: 'docs'
    notes:
      description: 'Fix release notes.'
      changelog_id: pkg_api
      changelog_section_id: 'notes'
    web-content:
      description: 'Change the website content.'
      changelog_id: 'website'
      changelog_section_id: 'content'
    web-design:
      description: 'Change the website design.'
      changelog_id: 'website'
      changelog_section_id: 'design'
    web-backend:
      description: 'Change the website backend.'
      changelog_id: 'website'
      changelog_section_id: 'backend'
    priv-remove:
      description: 'Remove a feature/component from the private API.'
      changelog_id: 'package_private'
      changelog_section_id: 'removed'
    priv-change:
      description: 'Change a feature/component in the private API.'
      changelog_id: 'package_private'
      changelog_section_id: 'changed'
    priv-feat:
      description: 'Add a feature/component to the private API.'
      changelog_id: 'package_private'
      changelog_section_id: 'added'
    priv-enhance:
      description: 'Enhance a feature/component in the private API.'
      changelog_id: 'package_private'
      changelog_section_id: 'enhanced'
    priv-fix:
      description: 'Fix a bug in the private API.'
      changelog_id: 'package_private'
      changelog_section_id: 'fixed'
    priv-perf:
      description: 'Improve performance in the private API.'
      changelog_id: 'package_private'
      changelog_section_id: 'improved'
    priv-docs:
      description: 'Fix documentation.'
      changelog_id: 'package_private'
      changelog_section_id: 'docs'
    build:
      description: 'Change the build system.'
      changelog_id: 'package_private'
      changelog_section_id: 'build'
    refactor:
      description: 'Refactor code.'
      changelog_id: 'package_private'
      changelog_section_id: 'refactor'
    style:
      description: 'Change text style and formatting without affecting the meaning.'
      changelog_id: 'package_private'
      changelog_section_id: 'style'
    test-remove:
      description: 'Remove a feature/component from the test-suite.'
      changelog_id: 'tests'
      changelog_section_id: 'removed'
    test-change:
      description: 'Change a feature/component in the test-suite.'
      changelog_id: 'tests'
      changelog_section_id: 'changed'
    test-feat:
      description: 'Add a feature/component to the test-suite.'
      changelog_id: 'tests'
      changelog_section_id: 'added'
    test-enhance:
      description: 'Enhance a feature/component in the test-suite.'
      changelog_id: 'tests'
      changelog_section_id: 'enhanced'
    test-fix:
      description: 'Fix a bug in the test-suite.'
      changelog_id: 'tests'
      changelog_section_id: 'fixed'
    test-perf:
      description: 'Improve performance in the test-suite.'
      changelog_id: 'tests'
      changelog_section_id: 'improved'
    test-docs:
      description: 'Fix documentation in the test-suite.'
      changelog_id: 'tests'
      changelog_section_id: 'docs'
    test-build:
      description: 'Change the test-suite build system.'
      changelog_id: 'tests'
      changelog_section_id: 'build'
    test-refactor:
      description: 'Refactor code in the test-suite.'
      changelog_id: 'tests'
      changelog_section_id: 'refactor'
    test-style:
      description: 'Change text style and formatting in the test-suite without affecting the meaning.'
      changelog_id: 'tests'
      changelog_section_id: 'style'
    ci:
      description: 'Change the CI configuration files and scripts.'
      changelog_id: 'workflows'
      changelog_section_id: 'workflows'
    meta-credits:
      description: 'Change credits meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'credits'
    meta-extensions:
      description: 'Change extensions meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'extensions'
    meta-intro:
      description: 'Change intro meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'intro'
    meta-license:
      description: 'Change license meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'license'
    meta-changelog:
      description: 'Change changelog meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'changelog'
    meta-commits:
      description: 'Change commits meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'commits'
    meta-issues:
      description: 'Change issues meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'issues'
    meta-labels:
      description: 'Change labels meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'labels'
    meta-maintainers:
      description: 'Change maintainers meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'maintainers'
    meta-repo:
      description: 'Change repo meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'repo'
    meta-workflows:
      description: 'Change workflows meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'workflows'
    meta-package:
      description: 'Change package meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'package'
    meta-package-build:
      description: 'Change package build meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'package_build'
    meta-package-tools:
      description: 'Change package tools meta content.'
      changelog_id: 'meta'
      changelog_section_id: 'package_tools'
label:
  type:
    prefix: 'Type: '
    color: '#A00000'
    label:
      major:
        suffix: 'major-release'
        description: New major release.
      minor:
        suffix: 'minor-release'
        description: New minor release.
      patch:
        suffix: 'patch-release'
        description: New patch release.
      post:
        suffix: 'post-release'
        description: New post release.
      web:
        suffix: 'website'
        description: New website release.
      config:
        suffix: 'config'
        description: Project configuration.
      package_private:
        suffix: 'package'
        description: |
          An issue/pull-request about the package that does not result in a new release.
      workflows:
        suffix: 'ci'
        description: |
          An issue/pull-request about the GitHub workflows of the repository.
  subtype:
    prefix: 'SubType: '
    color: '#0366d6'
    label:
      api:
        suffix: 'api'
        description: Related to the Python application programming interface.
      gui:
        suffix: 'gui'
        description: Related to the graphical user interface.
      cli:
        suffix: 'cli'
        description: Related to the command-line interface.
      setup:
        suffix: 'setup'
        description: Related to installation.
      enhancement:
        suffix: 'enhancement'
        description: |
          An enhancement to an existing feature or functionality.
      feat:
        suffix: 'feat'
        description: |
          A new feature or functionality.
      breaking:
        suffix: 'breaking'
        description: |
          A backward-incompatible change to the API.
  status:
    prefix: 'Status: '
    color: '#0366d6'
    label:
      triage:
        suffix: 'triage'
        description: The issue is being triaged.
      rejected:
        suffix: 'rejected'
        description: |
          The issue/pull-request has been rejected.
      duplicate:
        suffix: 'duplicate'
        description: |
          The issue/pull-request is a duplicate.
      invalid:
        suffix: 'invalid'
        description: |
          The issue/pull-request is invalid.
      planning:
        suffix: 'planning'
        description: The issue is in the planning phase.
      requirement_analysis:
        suffix: 'req. analysis'
        description: The issue is in the requirement analysis phase.
      design:
        suffix: 'design'
        description: The issue is in the design phase.
      implementation:
        suffix: 'implementation'
        description: The issue is in the implementation phase.
      testing:
        suffix: 'testing'
        description: The issue is in the testing phase.
      deploy_alpha:
        suffix: 'alpha'
        description: The issue/pull-request is in alpha release.
      deploy_beta:
        suffix: 'beta'
        description: The issue/pull-request is in beta release.
      deploy_rc:
        suffix: 'rc'
        description: The issue/pull-request is published as a release candidate.
      deploy_final:
        suffix: 'final'
        description: The issue/pull-request has been merged into a release branch.
  branch:
    prefix: "Target: "
    description: Related to this specific branch of the repository.
    color: "#0366d6"
  version:
    prefix: "Version: "
    description: Related to this specific version of the package.
    color: "#0366d6"
  custom:
    group:
      remark:
        prefix: 'Remark: '
        color: '#0366d6'
        label:
          queued:
            suffix: 'queued'
            description: The issue/pull-request is queued for processing.
          discuss:
            suffix: 'discuss'
            description: The issue/pull-request requires more discussion.
          need_volunteer:
            suffix: 'need volunteer'
            description: The issue/pull-request requires a volunteer.
issue:
  blank_enabled: false
  contact_links:
    - name: '🎓️  Learn More'
      about: Not sure where to start? Read our contribution guide to learn more.
      url: ${{ web.page.contribute.url }}
    - name: '💬  Contact Us'
      about: Have another inquiry or need help? Contact us directly!
      url: ${{ web.page.contact.url }}
  __custom_template__:
    # Body Templates
    body_bug_api:
      - '*{{ issue.__custom_template__.header_bug }}'
      - '*{{ issue.__custom_template__.address_api }}'
      - ${{ issue.__custom__.issue_summary }}
      - type: textarea
        id: test_case
        attributes:
          label: Test Case
          description: |
            Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html)
            that demonstrates the bug:
            - At the top of the code block below,
              add the minimum number of imports required to reproduce the bug.
            - Replace the ellipsis (`...`) in the `test` function with a
              [Minimal Reproducible Example](https://stackoverflow.com/help/minimal-reproducible-example) (MRE).
              Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html)
              to specify the expected results.
          value: |
            import ${{ .__custom__.python_api_names[0] }}


            def test():
                ...
          render: python
        validations:
          required: true
    body_bug_cli:
      - '*{{ issue.__custom_template__.header_bug }}'
      - '*{{ issue.__custom_template__.address_cli }}'
      - ${{ issue.__custom__.issue_summary }}
      - type: textarea
        id: code
        attributes:
          label: Test Case
          description: |
            Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html)
            that demonstrates the bug:
            - In the `test` function below,
              replace the value of `command` with the exact command that is causing the problem.
            - Replace the value of `expected_return_code` with the expected return code of the command.
            - Replace the value of `expected_output` with the expected output of the command.
              Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html)
              to specify the expected results.
            - If the command has side effects,
              add further [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html)
              to specify the expected results.
          value: |
            import subprocess 


            def test():
                command = "${{ .__custom__.cli_names[0] }}"
                expected_return_code = 0
                expected_output = b""

                result = subprocess.run(command, stdout=subprocess.PIPE, shell=True)
                assert result.returncode == expected_return_code
                assert result.stdout == expected_output
          render: python
        validations:
          required: true
    body_bug_gui:
      - '*{{ issue.__custom_template__.header_bug }}'
      - '*{{ issue.__custom_template__.address_gui }}'
      - ${{ issue.__custom__.issue_summary }}
      - ${{ issue.__custom__.mre_generic }}
      - ${{ issue.__custom__.stderr_optional }}
    body_bug_setup:
      - '*{{ issue.__custom_template__.header_bug }}'
      - ${{ issue.__custom__.issue_summary }}
      - ${{ issue.__custom__.mre_generic }}
      - ${{ issue.__custom__.stderr_optional }}
    body_feat_api:
      - '*{{ issue.__custom_template__.header_feature }}'
      - '*{{ issue.__custom_template__.address_api }}'
      - ${{ issue.__custom__.issue_summary }}
      - ${{ issue.__custom__.proposal }}
    body_feat_cli:
      - '*{{ issue.__custom_template__.header_feature }}'
      - '*{{ issue.__custom_template__.address_cli }}'
      - ${{ issue.__custom__.issue_summary }}
      - ${{ issue.__custom__.proposal }}
    body_feat_gui:
      - '*{{ issue.__custom_template__.header_feature }}'
      - '*{{ issue.__custom_template__.address_gui }}'
      - ${{ issue.__custom__.issue_summary }}
      - ${{ issue.__custom__.proposal }}
    body_break_api:
      - '*{{ issue.__custom_template__.header_breaking }}'
      - '*{{ issue.__custom_template__.address_api }}'
      - ${{ issue.__custom__.issue_summary }}
      - ${{ issue.__custom__.proposal }}
    body_break_cli:
      - '*{{ issue.__custom_template__.header_breaking }}'
      - '*{{ issue.__custom_template__.address_cli }}'
      - ${{ issue.__custom__.issue_summary }}
      - ${{ issue.__custom__.proposal }}
    body_break_gui:
      - '*{{ issue.__custom_template__.header_breaking }}'
      - '*{{ issue.__custom_template__.address_gui }}'
      - ${{ issue.__custom__.issue_summary }}
      - ${{ issue.__custom__.proposal }}
    # Body Header Templates
    header_bug:
      - '*{{ issue.__custom_template__.header }}'
      - type: markdown
        attributes:
          value: |
            ### ⚠️ Verifying the Bug

            <p align="justify">
              Before submitting a report, please make sure that you are following our
              <a href="${{ web.page.contribute.url }}">Bug Report Guidelines</a> to verify that:
            </p>

            - <p align="justify">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>
            - <p align="justify">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>
      - '*{{ issue.__custom__.agreements }}'
      - '*{{ issue.__custom__.environment }}'
      - type: markdown
        attributes:
          value: |
            <br>
            ## 🐞 Bug Report
      - ${{ issue.__custom__.package_version }}
    header_feature:
      - '*{{ issue.__custom_template__.header }}'
      - type: markdown
        attributes:
          value: |
            ### ⚠️ Verifying the Request

            <p align="justify">
              Before submitting a report, please make sure that you are following our
              <a href="${{ web.page.contribute.url }}">Feature Request Guidelines</a> to verify that:
            </p>

            - <p align="justify">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>
            - <p align="justify">The request is not implemented in the latest version of the release, and has not yet been filed.</p>
      - '*{{ issue.__custom__.agreements }}'
      - type: markdown
        attributes:
          value: |
            <br>
            ## ✨ Feature Request
      - ${{ issue.__custom__.package_version }}
    header_breaking:
      - '*{{ issue.__custom_template__.header }}'
      - type: markdown
        attributes:
          value: |
            ### ⚠️ Verifying the Request

            <p align="justify">
              Before submitting a report, please make sure that you are following our
              <a href="${{ web.page.contribute.url }}">Change Request Guidelines</a> to verify that:
            </p>

            - <p align="justify">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>
            - <p align="justify">The request is not implemented in the latest version of the release, and has not yet been filed.</p>
      - '*{{ issue.__custom__.agreements }}'
      - type: markdown
        attributes:
          value: |
            <br>
            ## 💥 Change Request
      - ${{ issue.__custom__.package_version }}
    header:
      - type: markdown
        attributes:
          value: >-
            <p align="justify">
              Thank you for providing feedback on ${{ name }};
              we greatly appreciate your contribution!
            </p>
            <p align="justify">
              Before submitting a ticket,
              please take a moment to review and accept our terms and conditions.
            </p>
      - type: markdown
        attributes:
          value: |
            ## 🤝 Terms and Conditions
      - type: markdown
        attributes:
          value: |
            ### ⛔ Choosing the Right Form

            <p align="justify">
              Please note that this form is specifically for ${{ .__custom_template__.purpose }},
              For other types of issues and requests, select the appropriate form
              from the <a href="${{ repo.url.issues.template_chooser }}">issue template chooser</a>.
              If you are unsure about which form to choose or have another inquiry,
              please open a discussion in our <a href="${{ repo.url.discussions.home }}">discussion forum</a>.
            </p>
    # Template Chooser Descriptions
    description_bug: >-
      Report problems such as errors and unexpected results
      encountered while using ${{ .__custom__.pkg_name }}'s ${{ .__custom__.pkg_entry_name }}.
    description_feat: >-
      Request backward-compatible improvements or new functionalities
      in ${{ .__custom__.pkg_name }}'s ${{ .__custom__.pkg_entry_name }}.
    description_break: >-
      Request backward-incompatible changes to
      ${{ .__custom__.pkg_name }}'s ${{ .__custom__.pkg_entry_name }},
      such as changes in the behavior of an existing functionality.
    # Form Purpose
    purpose_bug: >-
      reporting a <b>non-security-related bug in
      ${{ .__custom__.pkg_name }}'s ${{ .__custom__.pkg_entry_name }}</b>,
      i.e. an unexpected behavior that occurs
      while using ${{ .__custom__.pkg_name }}'s ${{ .__custom__.pkg_entry_description }}.
    purpose_feat: >-
      requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in
      ${{ .__custom__.pkg_name }}'s ${{ .__custom__.pkg_entry_name }},
      i.e. a non-breaking change (that is not a bug fix) in
      ${{ .__custom__.pkg_name }}'s ${{ .__custom__.pkg_entry_description }}.
    purpose_break: >-
      requesting a <b>backward-incompatible change</b> in
      ${{ .__custom__.pkg_name }}'s ${{ .__custom__.pkg_entry_name }},
      i.e. a breaking change to ${{ .__custom__.pkg_name }}'s ${{ .__custom__.pkg_entry_description }}.
    # Address
    address_api:
      - type: dropdown
        id: api_entry
        attributes:
          label: API Entry Point
          description: Please select the relevant API entry point.
          multiple: false
          options: ${{ .__custom__.python_api_names }}
          default: 0
        validations:
          required: true
      - type: input
        id: api_endpoint
        attributes:
          label: Fully Qualified Name
          description: >-
            Please provide the fully qualified name (minus the entry point)
            of the relevant API endpoint.
            For example, for a method at
            `${{ .__custom__.python_api_names[0] }}.module_name.ClassName.method_name`
            in the entry point `${{ .__custom__.python_api_names[0] }}`,
            you should write `module_name.ClassName.method_name`.
          placeholder: module_name.ClassName.method_name
        validations:
          required: true
    address_cli:
      - type: dropdown
        id: cli_entry
        attributes:
          label: CLI Entry Point
          description: Please select the relevant CLI entry point.
          multiple: false
          options: ${{ .__custom__.cli_names }}
          default: 0
        validations:
          required: true
    address_gui:
      - type: dropdown
        id: gui_entry
        attributes:
          label: GUI Entry Point
          description: Please select the affected GUI entry point.
          multiple: false
          options: ${{ .__custom__.gui_names }}
          default: 0
        validations:
          required: true
    # Post-Process Body Templates
    post_body_bug_api: |
      ## Bug Location
      <ul>
      <li><b>Package Version</b>: {version}</li>
      <li><b>Fully Qualified Name</b>: {api_entry}</li>
      </ul>
      <h2>System and Version Specifications</h2>
      <li><b>Operating System</b>: {os}</li>
      <li><b>Python Version</b>: {python_version}</li>
      <li><b>Package Manager</b>: {package_manager}</li>
      <li>
      <details>
      <summary><b>Environment</b></summary>
      
      ```
      {environment}
      ```
      
      </details></li>
      </ul>
      
      ## Bug Summary
      
      {summary}
      
      ## Test Case / Minimal Reproducible Example (MRE)
      
      {code}
      
      ## Error Message
      
      {log}
    post_body_bug_cli: |
      #TODO
    post_body_bug_gui: |
      #TODO
    post_body_bug_setup: |
      #TODO
    post_body_feat_api: |
      ### Feature Location
      - **Package Version**: {version}
      - **Package Interface**: {package_interface}
      - **Operating System**: {os}
      - **Python Version**: {python_version}
      - **Package Manager**: {package_manager}
  
      ### Request Summary
  
      {summary}
    post_body_feat_cli: |
      ### Feature Location
      - **Package Version**: {version}
      - **Package Interface**: {package_interface}
      - **Operating System**: {os}
      - **Python Version**: {python_version}
      - **Package Manager**: {package_manager}

      ### Request Summary

      {summary}
    post_body_feat_gui: |
      ### Feature Location
      - **Package Version**: {version}
      - **Package Interface**: {package_interface}
      - **Operating System**: {os}
      - **Python Version**: {python_version}
      - **Package Manager**: {package_manager}

      ### Request Summary

      {summary}
    post_body_break_api: |
      ### Change Location
      - **Package Version**: {version}
      - **Package Interface**: {package_interface}
      - **Operating System**: {os}
      - **Python Version**: {python_version}
      - **Package Manager**: {package_manager}

      ### Request Summary

      {summary}
    post_body_break_cli: |
      ### Change Location
      - **Package Version**: {version}
      - **Package Interface**: {package_interface}
      - **Operating System**: {os}
      - **Python Version**: {python_version}
      - **Package Manager**: {package_manager}

      ### Request Summary

      {summary}
    post_body_break_gui: |
      ### Change Location
      - **Package Version**: {version}
      - **Package Interface**: {package_interface}
      - **Operating System**: {os}
      - **Python Version**: {python_version}
      - **Package Manager**: {package_manager}

      ### Request Summary

      {summary}
  __custom__:
    title_api: ' 🖥 API'
    title_cli: ' ⌨️ CLI'
    title_gui: ' 🖱 GUI'
    title_setup: ' ⚙️ Setup'
    title_bug: ' 🐞 Bug Report'
    title_feat: ' ✨ Feature Request'
    title_breaking: ' 💥 Change Request'
    title_test: ' 🧪 Test Suite'
    agreements:
      - type: markdown
        attributes:
          value: '###✅ Agreements'
      - type: checkboxes
        id: terms
        attributes:
          label: >-
            To submit an issue, please agree to the following terms and conditions:
          options:
            - label: >-
                I confirm that I am following ${{ name }}'s
                [Contribution Guidelines](${{ web.page.contribute.url }}).
              required: true
            - label: >-
                I agree to follow ${{ name }}'s
                [Code of Conduct](${{ health.code_of_conduct.url }}).
              required: true
      - type: markdown
        attributes:
          value: '### 🧑‍💻️ Collaboration'
      - type: checkboxes
        id: collab
        attributes:
          label: |
            Thank you again for filling out this ticket.
            If you are willing to collaborate on its implementation,
            please select the option below.
          options:
            - label: >-
                I am willing to collaborate on this issue and submit a pull request.
              required: false
    environment:
      - type: markdown
        attributes:
          value: |
            <br>
            ## 🎛 Environment Specifications
      - type: dropdown
        id: os
        attributes:
          label: Operating System
          description: |
            Please select all operating systems on which you have encountered the bug.
          multiple: true
          options: ${{ project.os_names }}
        validations:
          required: true
      - type: dropdown
        id: python_version
        attributes:
          label: Python Version
          description: |
            Please select all Python versions in which you have encountered the bug.
          multiple: true
          options: ${{ project.python_versions }}
        validations:
          required: true
      - type: dropdown
        id: package_manager
        attributes:
          label: Package Manager
          description: |
            Please select the package manager used to download and install ${{ name }}.
          multiple: false
          options: ${{ project.package_managers }}
        validations:
          required: true
      - type: textarea
        id: environment
        attributes:
          label: Environment
          description: >-
            Please provide the details of all installed packages and their exact versions
            in the environment where you have encountered the bug. Follow the instructions below
            based on the package manager you have selected:

            1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment,
            and copy the contents of the generated `requirements.txt` file here.

            2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment
            (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`),
            and copy the contents of the generated `environment.yml` file here.
        validations:
          required: true
    package_version:
      type: dropdown
      id: version
      attributes:
        label: Package Version
        description: |
          Please select all relevant ${{ name }} versions.
        multiple: true
        options: ${{ project.versions }}
        default: 0
      validations:
        required: true
    issue_summary:
      type: textarea
      id: summary
      attributes:
        label: Summary
        description: Please provide a summary of the issue.
      validations:
        required: true
    mre_generic:
      type: textarea
      id: mre
      attributes:
        label: Minimal Reproducible Example (MRE)
        description: >-
          Please provide an exact step-by-step instruction to reproduce the problem.
          You can also include screenshots/recordings by dragging and dropping them here.
        value: |
          1.
          2.
          3.
      validations:
        required: true
    stderr_optional:
      type: textarea
      id: stderr
      attributes:
        label: Error Message
        description: If applicable, provide the full traceback of the error message.
        render: shell
      validations:
        required: false
    proposal:
      type: textarea
      id: proposal
      attributes:
        label: Proposal
        description: Please describe your proposal in detail.
      validations:
        required: true
    post_process_assign_creator:
      if_checkbox:
        id: collab
        number: 1
        is_checked: true
  forms:
    - id: pkg_api_bug
      type: patch
      subtype: api
      pre_process:
        if_any: [ "${{ project.python_api_names }}" ]
      name: ${{ issue.__custom__.title_api }}${{ issue.__custom__.title_bug }}
      description: ${{ issue.__custom_template__.description_bug }}
      __custom__:
        pkg_name: ${{ pkg.name }}
        pkg_entry_name: 'API'
        pkg_entry_description: 'Python application programming interface'
        python_api_names: ${{ project.python_api_names }}
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_bug }}
      body: ${{ issue.__custom_template__.body_bug_api }}
      post_process:
        assign_creator: ${{ issue.__custom__.post_process_assign_creator }}
        body: ${{ issue.__custom_template__.post_body_bug_api }}
    - id: pkg_cli_bug
      type: patch
      subtype: cli
      pre_process:
        if_any: [ "${{ project.cli_names }}" ]
      name: ${{ issue.__custom__.title_cli }}${{ issue.__custom__.title_bug }}
      description: ${{ issue.__custom_template__.description_bug }}
      __custom__:
        pkg_name: ${{ pkg.name }}
        pkg_entry_name: 'CLI'
        pkg_entry_description: 'command-line interface'
        cli_names: ${{ project.cli_names }}
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_bug }}
      body: ${{ issue.__custom_template__.body_bug_cli }}
      post_process:
        assign_creator: ${{ issue.__custom__.post_process_assign_creator }}
        body: ${{ issue.__custom_template__.post_body_bug_cli }}
    - id: pkg_gui_bug
      pre_process:
        if_any: [ "${{ project.gui_names }}" ]
      type: patch
      subtype: gui
      name: ${{ issue.__custom__.title_gui }}${{ issue.__custom__.title_bug }}
      description: ${{ issue.__custom_template__.description_bug }}
      __custom__:
        pkg_name : ${{ pkg.name }}
        pkg_entry_name: 'GUI'
        pkg_entry_description: 'graphical user interface'
        gui_names: ${{ project.gui_names }}
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_bug }}
      body: ${{ issue.__custom_template__.body_bug_gui }}
      post_process:
        assign_creator: ${{ issue.__custom__.post_process_assign_creator }}
        body: ${{ issue.__custom_template__.post_body_bug_gui }}
    - id: pkg_setup_bug
      type: patch
      subtype: setup
      name: ${{ issue.__custom__.title_setup }}${{ issue.__custom__.title_bug }}
      description: Report problems in downloading, installation, or initialization of ${{ pkg.name }}.
      __custom_template__:
        purpose: >-
          reporting a <b>non-security-related bug in ${{name}}'s setup process</b>,
          i.e. an unexpected behavior that occurs during
          the download, installation, or initialization of the application.
      body: ${{ issue.__custom_template__.body_bug_setup }}
      post_process:
        assign_creator: ${{ issue.__custom__.post_process_assign_creator }}
        body: ${{ issue.__custom_template__.post_body_bug_setup }}
    - id: pkg_api_feature
      type: minor
      subtype: api
      pre_process:
        if_any: [ "${{ project.python_api_names }}" ]
      name: ${{ issue.__custom__.title_api }}${{ issue.__custom__.title_feat }}
      description: ${{ issue.__custom_template__.description_feat }}
      __custom__:
        pkg_name: ${{ pkg.name }}
        pkg_entry_name: 'API'
        pkg_entry_description: 'Python application programming interface'
        python_api_names: ${{ project.python_api_names }}
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_feat }}
      body: ${{ issue.__custom_template__.body_feat_api }}
      post_process:
        assign_creator: ${{ issue.__custom__.post_process_assign_creator }}
        body: ${{ issue.__custom_template__.post_body_feat_api }}
    - id: pkg_cli_feature
      type: minor
      subtype: cli
      pre_process:
        if_any: [ "${{ project.cli_names }}" ]
      name: ${{ issue.__custom__.title_cli }}${{ issue.__custom__.title_feat }}
      description: ${{ issue.__custom_template__.description_feat }}
      __custom__:
        pkg_name: ${{ pkg.name }}
        pkg_entry_name: 'CLI'
        pkg_entry_description: 'command-line interface'
        cli_names: ${{ project.cli_names }}
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_feat }}
      body: ${{ issue.__custom_template__.body_feat_cli }}
      post_process:
        assign_creator: ${{ issue.__custom__.post_process_assign_creator }}
        body: ${{ issue.__custom_template__.post_body_feat_cli }}
    - id: pkg_gui_feature
      type: minor
      subtype: gui
      pre_process:
        if_any: [ "${{ project.gui_names }}" ]
      name: ${{ issue.__custom__.title_gui }}${{ issue.__custom__.title_feat }}
      description: ${{ issue.__custom_template__.description_feat }}
      __custom__:
        pkg_name: ${{ pkg.name }}
        pkg_entry_name: 'GUI'
        pkg_entry_description: 'graphical user interface'
        gui_names: ${{ project.gui_names }}
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_feat }}
      body: ${{ issue.__custom_template__.body_feat_gui }}
      post_process:
        assign_creator: ${{ issue.__custom__.post_process_assign_creator }}
        body: ${{ issue.__custom_template__.post_body_feat_gui }}
    - id: pkg_api_breaking
      type: major
      subtype: api
      pre_process:
        if_any: [ "${{ project.python_api_names }}" ]
      name: ${{ issue.__custom__.title_api }}${{ issue.__custom__.title_breaking }}
      description: ${{ issue.__custom_template__.description_break }}
      __custom__:
        pkg_name: ${{ pkg.name }}
        pkg_entry_name: 'API'
        pkg_entry_description: 'Python application programming interface'
        python_api_names: ${{ project.python_api_names }}
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_break }}
      body: ${{ issue.__custom_template__.body_break_api }}
      post_process:
        assign_creator: ${{ issue.__custom__.post_process_assign_creator }}
        body: ${{ issue.__custom_template__.post_body_break_api }}
    - id: pkg_cli_breaking
      type: major
      subtype: cli
      pre_process:
        if_any: [ "${{ project.cli_names }}" ]
      name: ${{ issue.__custom__.title_cli }}${{ issue.__custom__.title_breaking }}
      description: ${{ issue.__custom_template__.description_break }}
      __custom__:
        pkg_name: ${{ pkg.name }}
        pkg_entry_name: 'CLI'
        pkg_entry_description: 'command-line interface'
        cli_names: ${{ project.cli_names }}
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_break }}
      body: ${{ issue.__custom_template__.body_break_cli }}
      post_process:
        assign_creator: ${{ issue.__custom__.post_process_assign_creator }}
        body: ${{ issue.__custom_template__.post_body_break_cli }}
    - id: pkg_gui_breaking
      type: major
      subtype: gui
      pre_process:
        if_any: [ "${{ project.gui_names }}" ]
      name: ${{ issue.__custom__.title_gui }}${{ issue.__custom__.title_breaking }}
      description: ${{ issue.__custom_template__.description_break }}
      __custom__:
        pkg_name: ${{ pkg.name }}
        pkg_entry_name: 'GUI'
        pkg_entry_description: 'graphical user interface'
        gui_names: ${{ project.gui_names }}
      __custom_template__:
        purpose: ${{ issue.__custom_template__.purpose_break }}
      body: ${{ issue.__custom_template__.body_break_gui }}
      post_process:
        assign_creator: ${{ issue.__custom__.post_process_assign_creator }}
        body: ${{ issue.__custom_template__.post_body_break_gui }}




#
#
#
#
#    - id: web_bug_frontend
#      type: web
#      name: '📚 Docs  🪲 Bug Report  📄 Content'
#      labels: [ "SubType: breaking" ]
#      description: >-
#        Report a problem in the contents of the documentation,
#        e.g. missing details, ambiguous explanations, mechanical errors, broken links etc.
#      body:
#    - id: web_bug_frontend
#      type: web
#      name: '📚 Docs  🪲 Bug Report  🌐 Website'
#      labels: [ "SubType: breaking" ]
#      description: >-
#        Report a technical problem in the documentation website,
#        including broken page formatting, loading issues, and unexpected behavior.
#      body:
#    - id: web_bug_frontend
#      type: web
#      name: '📚 Docs  🔔 Request  💫 New Content'
#      labels: [ "SubType: breaking" ]
#      description: >-
#        Request a brand new feature that is not yet available in the application.
#      body:
#    - id: web_bug_frontend
#      type: web
#      name: '📚 Docs  🔔 Request  ✨ New Feature'
#      labels: [ "SubType: breaking" ]
#      description: >-
#        Request a brand new feature that is not yet available in the application.
#      body:
#
#
#
#
#
#
#
#
#
#    - id: web_bug_frontend
#      type: web
#      name: '🏗 DevOps  🪲 Bug Report'
#      labels: [ "SubType: breaking" ]
#      description: >-
#        Report a development problem in the repository, e.g. in CI/CD workflows, .
#      body:
#    - id: web_bug_frontend
#      type: web
#      name: '🏗 DevOps  🔔 Request'
#      labels: [ "SubType: breaking" ]
#      description: >-
#        Request an improvement in an existing feature, e.g. in terms of functionality,
#        performance, or ease of use.
#      body:
#    - id: web_bug_frontend
#      type: web
#      name: '🧹  Maintenance  🔔 Request'
#      labels: [ "SubType: breaking" ]
#      description: >-
#        Report a development problem in the repository, e.g. in CI/CD workflows, .
#      body:
document:
  prerelease_temp_path: docs/prerelease_dev_protocols.md
  template:
    title: Development Process Protocol
    body: |
      ## User Requirements Document (URD)
      - Issue Ticket {issue_number}
      
      {issue_body}
      
      ## Plan
      TBC      

      ## Software Requirements Specification (SRS)
      TBD

      ## Software Design Document (SDD)
      TBD

      ## Implementation
      TBD
      {primary_commit_summary}
      {secondary_commits_tasklist}

      ## References
      {references}

      ## Timeline
      {timeline}
pull:
  template:
    default: |
      ## Description
      Provide a brief description of the PR's purpose here.

      ## Content
      Notable points that this PR has either accomplished or will accomplish.
      - [ ] TODO 1

      ## Questions
      - [ ] Question1

      ## Status
       - [ ] Tests
       - [ ] Docs
       - [ ] CHANGELOG updated
       - [ ] Issue raised/referenced
       - [ ] Ready to merge

discussion:
  category:
    question_issues:
      form:
        title: "[General] "
        labels: [ "General Introduction" ]
        body:
          - type: markdown
            attributes:
              value: |
                This is text that will show up in the template!
          - type: textarea
            id: improvements
            attributes:
              label: Top 3 improvements
              description: "What are the top 3 improvements we could make to this project?"
              value: |
                1.
                2.
                3.
                ...
              render: bash
            validations:
              required: true
          - type: markdown
            attributes:
              value: |
                ## Markdown header
                And some more markdown
          - type: input
            id: has-id
            attributes:
              label: Suggestions
              description: A description about suggestions to help you
            validations:
              required: true
          - type: dropdown
            id: download
            attributes:
              label: Which area of this project could be most improved?
              options:
                - Documentation
                - Pull request review time
                - Bug fix time
                - Release cadence
            validations:
              required: true
          - type: checkboxes
            attributes:
              label: Check that box!
              options:
                - label: This one!
                  required: true
                - label: I won't stop you if you check this one, too
          - type: markdown
            attributes:
              value: |
                ### The thrilling conclusion
                _to our template_
