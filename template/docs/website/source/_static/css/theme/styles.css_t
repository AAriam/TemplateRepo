/*html[data-theme="dark"] {*/
/*    --pst-color-secondary-bg: black;*/
/*    --pst-color-primary: rgb(69, 155, 36);  !* (69, 157, 185) *!*/
/*    --pst-color-secondary: rgb(156, 204, 0);  !* (238, 144, 64) *!*/
/*    --pst-color-info: rgb(2, 100, 255);  !* (69, 157, 185) *!*/
/*    --pst-color-info-bg: rgb(70, 100, 2);  !* (69, 157, 185) *!*/
/*    !*--pst-color-warning: rgb(238, 144, 64);  !* (238, 144, 64) *!*!*/
/*    !*--pst-color-success: rgb(72, 135, 87);  !* (72, 135, 87) *!*!*/
/*    !*--pst-color-attention: rgb(220, 169, 15);  !* (220, 169, 15) *!*!*/
/*    !*--pst-color-danger: rgb(220, 7, 7);  !* (203, 70, 83) *!*!*/
/*    !*--pst-color-text-base: rgb(206, 206, 206);  !* (206, 206, 206) *!*!*/
/*    !*--pst-color-text-muted: rgb(166, 166, 166);  !* (166, 166, 166) *!*!*/
/*    !*--pst-color-shadow: rgb(50, 50, 50);  !* (33, 33, 33) *!*!*/
/*    !*--pst-color-border: rgb(60, 60, 60);  !* (192, 192, 192) *!*!*/
/*    !*--pst-color-inline-code: rgb(197, 133, 168);  !* (221, 158, 194) *!*!*/
/*    !*--pst-color-target: rgb(24, 24, 24);  !* (71, 39, 0) *!*!*/
/*    --pst-color-link: var(--pst-color-primary);  !* (69, 157, 185) == --pst-color-primary *!*/
/*    --pst-color-link-hover: var(--pst-color-secondary);  !* (238, 144, 64) == --pst-color-warning *!*/

/*    !***** Depth Colors *****!*/
/*    --pst-color-background: rgb(255, 0, 0);  !* (18, 18, 18) *!*/
/*    --pst-color-on-background: rgb(0 255 0);  !* (30, 30, 30) *!*/
/*    --pst-color-surface: rgb(0, 0, 255);  !* (33, 33, 33) *!*/
/*    --pst-color-on-surface: rgb(255, 255, 0);  !* (55, 55, 55) *!*/
/*    --pst-color-heading: var(--pst-color-primary);*/
/*}*/


{% for color_sheet in ccc.get("color", {}).get("css", {}).values() %}
    {% for theme in ["light", "dark"] %}
        {% set selector = color_sheet.selector.get(theme) %}
        {% if selector %}
{{ selector }} {
            {% set name_prefix = color_sheet.get("prefix", {}).get(theme, "") %}
            {% set name_suffix = color_sheet.get("suffix", {}).get(theme, "") %}
            {% for name_mid, colors in color_sheet.color.items() %}
                {% set color = colors.get(theme) %}
                {% if color %}
                    {% set name = name_prefix ~ name_mid ~ name_suffix %}
--{{ name }}: color;
                {% endif %}
            {% endfor %}
}
        {% endif %}
    {% endfor %}
{% endfor %}



/*
CSS colors for the pydata-sphinx HTML theme
Ref: https://pydata-sphinx-theme.readthedocs.io/en/stable/user_guide/styling.html#color-variables
Ref: https://github.com/pydata/pydata-sphinx-theme/blob/main/src/pydata_sphinx_theme/assets/styles/variables/_color.scss
*/


{% for theme in ["light", "dark"] %}
{% set outer_loop = loop %}
{% for name, color in ccc.color.items() %}
html[data-theme="{{theme}}"] {
    --pst-color-{{name}}: #{{color[theme]}};
}
{% endfor %}
{% endfor %}




/*html[data-theme="light"] .bd-header {*/
/*    background-color: white !important;*/
/*}*/

/*html[data-theme="dark"] .bd-header {*/
/*    background-color: black !important;*/
/*}*/
