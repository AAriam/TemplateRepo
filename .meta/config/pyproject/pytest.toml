# Pytest
# Ref: https://docs.pytest.org/en/stable/reference/reference.html#ini-options-ref
# Ref: https://docs.pytest.org/en/stable/reference/customize.html

[tool.pytest.ini_options]
addopts = "-ra --verbose --color=yes --full-trace --cov-config=pyproject.toml"
cache_dir = ".local/cache/pytest"
console_output_style = "count"
log_auto_indent = true

log_cli = true
log_cli_format = "%(levelname)s %(message)s"
log_cli_level = "INFO"

log_file = ".local/log/pytest.txt"
log_file_date_format = "%Y-%m-%d %H:%M:%S"
log_file_format = "%(asctime)s %(levelname)s %(message)s"
log_file_level = "DEBUG"

log_format = "%(asctime)s %(levelname)s %(message)s"
log_level = "DEBUG"

minversion = "7.4.2"



testpaths = ["tests"]


# pytest-cov / Coverage.py
# Ref: https://pytest-cov.readthedocs.io/en/latest/config.html
# Ref: https://coverage.readthedocs.io/en/latest/config.html

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
show_missing = true

[tool.coverage.html]
directory = "coverage_html_report"
